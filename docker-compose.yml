version: "3"
services:
  mysql:
    image: mysql:latest
    ports: 
      - 3306:3306
      - 33060:33060
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    volumes:
      - /Users/liuyu/docker_volumes/mysql:/var/lib/mysql

  etcd:
    image: 'bitnami/etcd:latest'
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:
      - 2379:2379
      - 2380:2380
      
  nats: 
    image: nats
    ports:
      - 4222:4222
      - 8222:8222     

  micro_api:
    image: microhq/micro
    command: api
    depends_on:
      - etcd
    ports:
      - 9000:8080
    environment:
      MICRO_ADDRESS: ":8080"
      MICRO_REGISTRY: "etcd"
      MICRO_REGISTRY_ADDRESS: "172.16.60.48:2379"
      MICRO_API_HANDLER: "http"
      MICRO_API_NAMESPACE: "go.micro.web" 

  micro_web:
    image: microhq/micro
    command: web
    depends_on:
      - etcd
    ports:
      - 8082:8082
    environment:
      MICRO_ADDRESS: ":8082"
      MICRO_REGISTRY: "etcd"
      MICRO_REGISTRY_ADDRESS: "172.16.60.48:2379"

  elastic:
    image: elasticsearch:7.4.0
    ports: 
      - 9200:9200
    environment:
      discovery.type: "single-node"
      ES_JAVA_OPTS: " -Xms256m -Xmx256m"
    volumes:
      - /Users/liuyu/docker_volumes/elastic:/usr/share/elasticsearch/data

  kibana:
    image: kibana:7.4.0
    ports:
      - 5601:5601
    volumes:
      - /Users/liuyu/docker_volumes/kibana.yml:/usr/share/kibana/config/kibana.yml
    # docker cp /Users/liuyu/kibana.yml crawler_kibana_1:/usr/share/kibana/config/kibana.yml

  # gogs:
  #   image: gogs/gogs
  #   depends_on:
  #     - mysql
  #   ports:
  #     - 3000:3000
  #     - 22:22
  #   volumes:
  #     - /Users/liuyu/docker_volumes/gogs:/data

  # drone:
  #   image: drone/drone:1
  #   depends_on:
  #     - gogs
  #   ports:
  #     - 80:80
  #     # - 443:443
  #   environment:
  #     DRONE_GIT_ALWAYS_AUTH: "false"
  #     DRONE_GOGS_SERVER: "http://172.16.60.48:3000"
  #     DRONE_RUNNER_CAPACITY: "2"
  #     DRONE_SERVER_HOST: "172.16.60.48:80"
  #     DRONE_SERVER_PROTO: "http"
  #     DRONE_TLS_AUTOCERT: "false"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /Users/liuyu/docker_volumes/drone:/data

  # redis:
  #   image: redis
  #   ports:
  #     - 6379:6379
  #   volumes:
  #     - /Users/liuyu/docker_volumes/redis:/data

  # consul: 
  #   image: consul
  #   ports:
  #     - 8500:8500
  #   volumes:
  #     - /Users/liuyu/docker_volumes/consul:/consul/data

# networks:
#   default:
#     external:
#       name: lynet